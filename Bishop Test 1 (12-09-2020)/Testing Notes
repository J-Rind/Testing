Bishop Test 1


1. Can successfully create pieces objects. (CORRECT)
    Created two white and two black bishop pieces objects.

2. When the bishop was created, the range is successfully set so it can only move to valid coordinates (CORRECT)
    Tested the white piece object (5,0) by moving it to an invalid coordinate (5,1), the piece was unable to move which is perfect.

3. Tested to make sure the bishop is restricted from jumping over other pieces (CORRECT)
    // Attempt to create conflicting moves (also checking if the piece can jump)
            blackBishop2.moveTo(7,2,blackKing,testPieces);
            whiteBishop1.moveTo(6,1, whiteKing, testPieces);
            blackBishop2.moveTo(5,0,blackKing,testPieces);

            whiteBishop1.moveTo(4,1, whiteKing, testPieces);
            blackBishop2.moveTo(5,0,blackKing,testPieces);
            whiteBishop1.moveTo(5,0, whiteKing, testPieces);

4. Tried to destroy a piece using another piece but it was unsuccessful (NON FUNCTIONAL)
    whiteBishop1.moveTo(5,0, whiteKing, testPieces);
    blackBishop2.moveTo(7,2,blackKing,testPieces);
    blackBishop2.moveTo(5,0,blackKing,testPieces);
    whiteBishop1.setIsAlive(false);
            whiteBishop1.print();
            blackBishop2.print();

    I was able to switch the isAlive to false after moving a piece to a location of another piece of a different color.
            The print() shows the same coordinates for both pieces but one of them shows up as being false after changing.
	    This is something that may be done by another class such as board or interface. 

Everything else with the bishop class seems to be working fine. See Main.java to see how the tests were conducted.

